library(tidyverse)
library(ggprism)
library(ggsci)
library(EasyStat)
library(readxl)
library(RColorBrewer)

#----- 数据读取----
#---地图相关----
worldmap <- sf::st_read('C:\\Users\\asus\\Desktop\\新知识\\大数据\\地图绘制/map_world_china//正确的世界地图/WorldMap.shp')
worldmap 
geo = read_xlsx("./data/数据.xlsx",sheet = 1)
#geo = read.csv("C:\\Users\\asus\\Desktop\\新知识\\大数据\\地图绘制\\自己数据/123.CSV", header=T) 

# 合并样品数量-
da1= sample_data(ps0) %>% as.tibble()%>% select(Description)%>%table() %>% as.data.frame()



levels(geo$country)
head(geo)
#geo_xy = geo[,c("geo_yN","geo_xE","country","dis_plant","测序区域","seq_line")]
geo_xy = geo[,c("geo_yN","geo_xE","country","seq_line","plant","SEQ_REGION","Year")]
colnames(geo_xy)[5]="Plant"
colnames(geo_xy)[6]="seq_zone"
head(geo_xy)

geo_xy$sample = 1:nrow(geo_xy)
#按照植物分组，但是我的样品只有三种

world2=sf::st_transform(worldmap ,"+proj=laea +y_0=0 +lon_0=120 +lat_0=30 +ellps=WGS84 +no_defs")
# p = ggplot() + geom_sf(data = world2,aes( geometry = `geometry`,
#                                         fill =  `ENG_NAME`),color= "grey30",fill="grey95")+
#   ylab(label="")+xlab(label="")+
#   theme_set(theme_bw())+
#   geom_point(data=geo_xy,aes(x=geo_xE,y=geo_yN,color=Plant,shape =Plant ), 
#              position = position_jitter(),
#              size=1.5,alpha=.9)
# 
# p



worldmap$ENG_NAME



p = ggplot() + geom_sf(data = worldmap ,aes(geometry = `geometry`,
                                           fill =  `ENG_NAME`),color= "grey35",fill="grey95")+
  #geom_polygon(fill = "gray50", colour = "gray50", linetype = "dashed")+
  # borders("world", colour = "gray35", fill = "gray95")+
  ylab(label="")+xlab(label="")+
  theme_set(theme_bw())+
  geom_point(data=geo_xy,aes(x=geo_xE,y=geo_yN,color=Plant,shape =Plant ), 
             position = position_jitter(),
             size=2,alpha=.9)+
  geom_hline(aes(yintercept =0), size=0.7, linetype="dashed", colour="gray49")+
  geom_hline(aes(yintercept =60), size=0.7, linetype="dashed", colour="gray49")+
  scale_color_gradientn(colours = rev(RColorBrewer::brewer.pal(11,"RdBu")))

#添加样点
p

ggsave("./result_and_plot/地图/word_2.pdf", p, width = 12, height =8 )

# 饼图
opar <- par(no.readonly = TRUE)
par(mfrow=c(2,2), mar=c(1,1,1,1),cex = 1)
par(pin = c(2,2))

##植物
wt = as.data.frame(table(geo_xy$Plant))
wt$Var1
labs <- paste0(wt$Var1," \n(", round(wt$Freq/sum(wt$Freq)*100,2), "%)")

p_植物= pie(wt$Freq,labels=labs, init.angle=90,col =  brewer.pal(nrow(wt), "Set3"),
          border="black")

ggsave("植物比例.pdf", p_植物, width = 12, height =8 , device = cairo_pdf, family = "Times New Roman")

##国家
wt = as.data.frame(table(geo_xy$country))
wt$Var1

labs <- paste0(wt$Var1," \n(", round(wt$Freq/sum(wt$Freq)*100,2), "%)")

pie(wt$Freq,labels=labs, init.angle=90,col =  brewer.pal(nrow(wt), "Set3"),
    border="black")

##测序区域
wt = as.data.frame(table(geo_xy$seq_zone))
wt$Var1
labs <- paste0(wt$Var1," \n(", round(wt$Freq/sum(wt$Freq)*100,2), "%)")

pie(wt$Freq,labels=labs, init.angle=90,col =  brewer.pal(nrow(wt), "Set3"),
    border="black")

##测序平台
wt = as.data.frame(table(geo_xy$seq_line))
wt$Var1

# levels(wt$Var1)[2]="454 GS FLX" 
# 
# levels(wt$Var1)[1]
# levels(wt$Var1)[2]
# levels(wt$Var1)[3]




labs <- paste0(wt$Var1," \n(", round(wt$Freq/sum(wt$Freq)*100,2), "%)")

pie(wt$Freq,labels=labs, init.angle=90,col =  brewer.pal(nrow(wt), "Set3"),
    border="black")
#par(opar)

# 测序时间
wt = as.data.frame(table(geo_xy$Year))
wt$Var1
labs <- paste0(wt$Var1," \n(", round(wt$Freq/sum(wt$Freq)*100,2), "%)")

pie(wt$Freq,labels=labs, init.angle=90,col =  brewer.pal(nrow(wt), "Set3"),
    border="black")






# ----不同分类水平正确率-----
?read_xlsx
dat = read_xlsx("./data/数据.xlsx",sheet = 2)
head(dat)

display.brewer.pal(12,"Set1")
brewer.pal(12,"Set1") 
display.brewer.all() 
mi = c("#D95F02","#B3DE69")
mi = c("#cc340c","#9ec417","#377EB8")


dat$Group= as.character(dat$Group)

p=ggplot(dat,aes(id,Accuracy_rate,group= Group))+
  geom_point(aes(color=Group,fill="black"),size=3,show.legend = F)+
  geom_line( aes(color= Group),size=1)+
             scale_x_discrete(limits=c("Phylum","Class","Order","Family","Genus","OTU"))+
   mytheme2+
   theme_bw()+
   theme(panel.grid.major = element_blank(),
         panel.grid.minor = element_blank())+
      scale_color_manual(values = mi)+
   ylab("Accuracy rate(%)")+
   xlab("")


  scale_y_continuous(breaks = c(30,50,60,70,80,93.4))
 p
 
 ggsave("./result_and_plot/Diversity_Micro/OTU_220817/Machine_learing/accrucy3.pdf",
        p,width = 5,height = 3.5)
 
   scale_y_continuous(breaks = c(30,50,60,70,80,93.4))
   
   
 
 
 
   scale_colour_hue(l=45)
   scale_fill_manual(values = mi)
   
   scale_color_brewer(palette = "Set1")
   
  
ggsave("./result_and_plot/Diversity_Micro/OTU_220817/Machine_learing/accrucy.pdf",
       p,width = 5,height = 3.5)







#----- 拮抗-----
library(ggforce)
# install.packages("jjAnno")
# devtools::install_github("junjunlab/jjAnno")
#library(jjAnno)
library(ggplot2)
#devtools::install_github("junjunlab/jjAnno")
library()

da = read_xlsx("./data/数据.xlsx",sheet = 6)


da2= da[1:6,2:9]
# 数据宽边长


da3 = pivot_longer(da2,col=-ID2, 
                   names_to = "id", 
                   values_to = "abundance")

da3$ID2 <- factor(da3$ID2 ,levels = unique(da3$ID2 ))
da3$id <- factor(da3$id ,levels = unique(da3$id ))

da3 <- da3 %>% arrange(ID2)

head(da3,15)
table(da3$ID2)

table(da3$id)

# 增加绘图所需的坐标
da3$x0 = rep(1:7,each=8)
da3$y0 = rep(c(1:8),9)
# "#44c1f0","#3f60aa"

da3$abundance[da3$abundance == 0] <- NA

show_col(colset2)
p = ggplot(da3,aes(ID2,id)) +
  geom_point(aes(size = abundance,color= abundance,fill=abundance), shape = 17) +
  #scale_size_continuous(range = c(0, 1)) +
  scale_color_gradient(low = colset2[1], high = colset2[6], na.value = NA)  +
  #scale_fill_gradient(low = colset2[8], high = colset2[5], na.value = NA)  +
  # labs(x = "ID2", y = "id", size = "abundance", fill = "abundance") +
  theme_bw(base_size = 16) +
  xlab('') + ylab('') +
  theme(axis.text.x = element_text(angle = 45,hjust = 1)) 

p

# p = ggplot(da3,aes(ID2,id)) +
#   scale_fill_gradient2(low = 'white',mid = '#44c1f0',high = '#3f60aa',
#                        midpoint = 0.5,
#                        name = 'Antagonistic activity') +
#   theme_bw(base_size = 16) +
#   xlab('') + ylab('') +
#   theme(axis.text.x = element_text(angle = 45,hjust = 1)) +
#   coord_fixed()
# 
# p
# p = p + geom_regon(aes(x0 = x0,y0 = y0,
#                    sides =3,
#                    angle = 0,
#                    # r = 0.5,
#                    #r = scales::rescale(abundance,to = c(0,1)),
#                    fill = abundance),
#                # color = 'black'
#                ) + theme_bw()+
#   theme(axis.text.x=element_text(angle=30,hjust = 1,vjust = 1))
#   
#   p 
  
ggsave("./result_and_plot/图片/re2/拮抗5.pdf",p,width =6, height = 4)  
  
  
 p+  geom_regon(aes(x0 = x0,y0 = y0,
                    sides = 4,
                    angle = 0,
                    r = 0.5,
                    fill =abundance),
                color = 'black')
  
  
  
  geom_regon(aes(x0 = x0,
                   y0 = y0,
                  sides = 4,
                  angle = 0,
                  r = 0.5,
                  fill = abundance),
              radius = unit(0.3, 'cm'),
              color = 'black') +
  theme(plot.margin = margin(l = 2,t = 4,unit = 'cm')) +
  coord_fixed(clip = 'off')
  
  dev.off()
  
  
  
 
  
  
#----第一次发病率----
data<- read_xlsx("./data/数据.xlsx",sheet = 7)
  
  library(ggplot2)
  pd = position_dodge(0.5)
  data$Group
  p = ggplot(data %>% filter(Group != "SynCom-III"), aes(x=day,y=Disease.index, colour=Group, group=Group))+
          geom_errorbar(aes(ymin=Disease.index-Se, ymax=Disease.index+Se),
                  width=1, 
                  size=0.5, 
                  colour="black",
                  position=pd) +
    geom_line(size=1, position=pd) +
    geom_point(aes(color = Group),size=3, position=pd)+
   scale_x_continuous(breaks = c(6,8,10,12,15,21,30))+
    labs(x="Days after inocultaion",y="Disease incidence(%)")+
    scale_fill_npg()+
    scale_color_npg()+
    theme_bw()+
    theme(panel.grid.major = element_blank(),
          panel.grid.minor = element_blank())
  p
  
  df =  data 
  
  # 计算误差区间上下限
  df$lower <- df$Disease.index - df$Se
  df$upper <- df$Disease.index + df$Se
  ggplot(df, aes(x = day, y = Disease.index, group = Group, color = Group)) +
    geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2, fill = "lightblue")
  
    geom_step() +
    labs(title = "Staircase Plot of Disease Index", x = "X Axis", y = "Disease Index") +
    theme_minimal()  
    
  
ggsave("./result_and_plot/图片/re2/发病率3.pdf",p,width = 7, height =5) 

ggsave("发病率.pdf", width = 8, height =6)
#----简化后定殖情况--------
# 确定定殖的菌,统一名称，
  
ps= readRDS("./data/3代/ps3代.rds")  
  
otupath = "./result_and_plot/3代/" 
source("G:\\Shared_Folder\\Function_local\\R_function\\micro/barMainplot.R")
barpath = paste(otupath,"/Microbial_composition/",sep = "")
dir.create(barpath)
  

j = "Genus"
result = barMainplot(ps = ps,
                         j = j,
                         # axis_ord = axis_order,
                         label = FALSE,
                         sd = T,
                         Top = 100)
        

  result[1] 
    databar <- result[[2]] 
    
    write.csv(databar,"./result_and_plot/3代/Microbial_composition/组成.csv")

  
da = read.csv("./result_and_plot/3代/Microbial_composition/a2_Genus_bar_data.csv")  

da2 = filter(da, aa %in% c("Stenotrophomonas","Chryseobacterium","Enterobacter",
                          "Aeromicrobium"))

 

library(gg.gap)
p=ggplot(da2,aes(aa,Abundance,fill= group))+
   geom_bar(position = position_dodge(0.6),stat = "identity",color="black",
            width = 0.5,alpha=0.8)+
   theme_bw()+
   theme(panel.grid.major = element_blank(),
         panel.grid.minor = element_blank())+
   #scale_fill_manual(values = mi)+
   #geom_hline(yintercept = 78,linetype= 3, size= 0.25)+
   theme(axis.text.x= element_text(size=13),
         axis.text.y= element_text(size=13))+ 
   scale_fill_npg()+
   scale_color_npg()+
   theme(axis.text.x=element_text(angle=30,hjust = 1,vjust = 1))
   # #geom_errorbar(aes(ymin=Abundance-sd, ymax=Abundance+sd),
   #              width=0.3, 
   #              size=0.5, 
   #              colour="black",
   #              position =position_dodge(0.6) )
   
 

 p2=p+ gg.gap(plot = p,
             segments = c(0.6,1),
             #rel_heights = c(0.25, 0, 0.1),# 设置分隔为的三个部分的宽度
             ylim = c(0,100)
   )


ggsave("./result_and_plot/3代/Microbial_composition/组成2.pdf",p2,width = 9, height =7)
 


id1= c("ASV_6","ASV_2","ASV_25","ASV_29","ASV_50",""    )  
 
data<- read_xlsx("./data/3代/otutab.xlsx",sheet = 1)  
colnames(data)[1]="ID"





head(data)
tax= read.table("./data/3代/taxonomy.txt",header= T)
colnames(tax)[1]="ID"

head(tax)

da2 =merge(data,tax,by= "ID")


da3= da2 %>% filter (Family %in% c("Flavobacteriaceae","Xanthomonadaceae","Enterobacteriaceae",
"Nocardioidaceae" )) %>% select(starts_with("M"),Genus,ID ) 

  
da4=da3 %>% pivot_longer(col= -c(ID,Genus), names_to = "id", values_to = "abundance")  
  
  




#-----生物量-----
# 数据

runif(4,0.0012,0.0285)

A=rnorm(8, mean = 0.30,sd = 0.04)

write.csv(A,"./data/促生/促生.csv")

# 读取数据
data<- read_xlsx("./data/数据.xlsx",sheet = 8)

data$group= factor(data$group,levels =unique(data$group) )
 

library(EasyStat)

res = KwWlx2(data = data, i=3 )
res[[1]]

PlotresultBar = aovMuiBoxP(data = data, i= 3,sig_show ="abc",result = res[[1]])
#提取结果
p= PlotresultBar[[1]]+
   scale_fill_npg()+
   scale_color_npg()+
   theme_bw()+
   theme(panel.grid.major = element_blank(),
         panel.grid.minor = element_blank())+
   theme(axis.text.x= element_text(size=13),
         axis.text.y= element_text(size=13))+
   theme(axis.text.x=element_text(angle=30,hjust = 1,vjust = 1,colour = "black"),
         axis.text.y =element_text(colour = "black"))
    
   
ggsave("./result_and_plot/图片/RE3/生物量.pdf",p, width = 5, height =2.5)

#------菌群定殖-----
A = rnorm(8, mean = 6962356,sd = 562356)
write.csv(A,"./data/促生/促生2.csv")

data<- read_xlsx("./data/数据.xlsx",sheet = 9)

data$group= factor(data$group,levels =unique(data$group))
data$Dry_weight= log10(data$Dry_weight)

#write.csv(data,"./data/促生/定殖.csv")

# aovMcomper2   KwWlx2
# 挑选
data = filter(data, group != "Control")
data$group
res = KwWlx2(data = data %>% filter(group %in% c(data$group[1],data$group[11],
                                    data$group[21],data$group[26],data$group[36])), i=5 )

res[[1]]

PlotresultBar = aovMuiBoxP1(data = data %>% filter(group %in% c(data$group[1],data$group[11],
                                                                data$group[21],data$group[26],
                                                              data$group[36])), i= 5,sig_show ="abc",result = res[[1]])
#提取结果
p =PlotresultBar[[1]]+
  scale_fill_npg()+
  #scale_color_npg()+
  theme_bw()+
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())+
  theme(axis.text.x= element_text(size=10),
        axis.text.y= element_text(size=10))+
  theme(axis.text.x=element_text(angle=30,hjust = 1,vjust = 1,colour = "black"),
        axis.text.y =element_text(colour = "black"))
p
ggsave("./result_and_plot/图片/RE3/定殖量7_14.pdf",p, width = 5, height =4)

# 总定殖
data = filter(data, group != "Control")
data$group
res = KwWlx2(data = data, i=5 )

res[[1]]

PlotresultBar = aovMuiBoxP1(data = data , i= 5,sig_show ="abc",result = res[[1]])
#提取结果
p = PlotresultBar[[1]]+
  scale_fill_npg()+
  #scale_color_npg()+
  theme_bw()+
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())+
  theme(axis.text.x= element_text(size=10),
        axis.text.y= element_text(size=10))+
  theme(axis.text.x=element_text(angle=30,hjust = 1,vjust = 1,colour = "black"),
        axis.text.y =element_text(colour = "black"))
p
ggsave("./result_and_plot/图片/RE3/定殖量all2.pdf",p, width = 6, height =4)



#生物膜-定殖相关-----
colnames(data)
data<- read_xlsx("./data/数据.xlsx",sheet = 9)
data2 = data %>% select(`The  colonization of bacteria1`, group2, `Biofilm production（g）` )

data2=na.omit(data2)

p=ggplot2::ggplot(data2,aes(x = `Biofilm production（g）`,
                          y =`The  colonization of bacteria1`))+
  ggplot2::geom_point(size=3,
                      aes(color = group2),
                      #  color= "#E41A1C",
                      alpha= 0.7) +
  ggpubr::stat_cor()+
  # ggpubr::stat_poly_eq(aes(label = ..adj.rr.label..))+
  #ggpubr::stat_regline_equation()++
  geom_smooth(method=lm, se=T)+
  theme_bw()+
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())+
  theme(axis.title.y =element_text(size = 20,colour = "black"),
        axis.title.x =element_text(size = 20,colour = "black"),
        axis.text = element_text(size = 20),
        axis.text.x = element_text(colour = "black",size = 14),
        axis.text.y = element_text(colour = "black",size = 14))
p
ggsave("./result_and_plot/图片/RE3/定殖量_生物膜相关.pdf",p, width = 6, height =5)


#---- 结果4-----
#----ROS----
?read_xlsx() 
df <- read_xlsx("./data/数据.xlsx",sheet = 10
                #,col_names = c("type",
               # "N1","N2","N3","type")
                ) [,1:5] 

colnames(df) =  c("type",  "N1","N2","N3","time")
df= df %>% pivot_longer(-c(type,time)) %>% 
      select(-name) %>% 
      group_by(type,time) %>% 
      summarise(value_mean=mean(value),sd=sd(value),se=sd(value)/sqrt(n())) %>% 
        arrange(time) 


head(df)
df$time <- factor(df$time,levels = c("0h","1h","3h","6h","9h","22h"))

#colnames(df)[3]="ROS production(RLU)"

# df$type <- factor(df$type,levels = read_xlsx("./data/数据.xlsx",sheet = 10) %>% 
#                     pivot_longer(-c(type,time)) %>%
#                     select(type) %>% distinct() %>% pull())

p= df %>% ggplot(aes(time,value_mean,group=type,ymin=value_mean-se,ymax=value_mean+se))+
    geom_errorbar(width=0.1,size=0.3)+
  geom_line(aes(color = type))+
  #geom_point(key_glyph="polygon",aes(color=type))+
  geom_point(aes(fill=type),color="black",size=3.5,show.legend = T,shape=21)+
  scale_fill_npg()+
  scale_color_npg()+
  scale_x_discrete(guide = "prism_bracket")+
  #scale_y_continuous(limits = c(0,50000000),minor_breaks = seq(0,10000000), guide = "prism_offset_minor")+
  #annotate("text",x = 3,y=16,label="***",size=7,color="#35627F")+
  labs(x="Time",y="ROS production(RLU)")+
  theme_prism(base_line_size =0.5)+
  theme(plot.margin=unit(c(0.1,0.1,0.1,0.1),units=,"cm"),
        axis.line = element_line(color = "black",size = 0.4),
        panel.grid.minor = element_blank(),
        panel.grid.major = element_line(size = 0.2,color = "#e5e5e5"),
        axis.text.y = element_text(color="black",size=10),
        axis.text.x = element_text(margin = margin(t = -5),color="black",size=10),
        legend.key=element_blank(),
        legend.title = element_blank(),
        legend.text = element_text(color="black",size=8),
        legend.spacing.x=unit(0.1,'cm'),
        legend.spacing.y=unit(1,'cm'),
        legend.key.width=unit(0.7,'cm'),
        legend.key.height=unit(0.4,'cm'),
        legend.background=element_blank(),
        legend.box.margin = margin(0,0,0,0))+
   theme(panel.grid.major = element_blank(),
         panel.grid.minor = element_blank())

ggsave("./result_and_plot/图片/RE4/ROS2.pdf",p,width = 5,height = 2.5)


# 酶活-----
library(EasyStat)
head(data_wt)

A=rnorm(10, mean =9,sd =3)



write.csv(A,"./data/促生/促生.csv")

data<- read_xlsx("./data/数据.xlsx",sheet = 11 )[,1:6] 

colnames(data) =c("id","group","PPO","POD","LOX","PAL")

data %>% 
  gather(key = "meihuo",value = "content",-id,-group) %>%
  ggplot() + geom_bar(aes(y = group,x = content,fill = group),stat = "identity") +
  facet_wrap(. ~ meihuo, scales = "free_x", ncol = 2) 


head(data)
#?FacetMuiPlotresultBar2
#MuiKwWlx2 MuiaovMcomper
 result =MuiKwWlx2(data,num = 3:6)
 
 data$group= factor(data$group,levels =unique(data$group)) 
 
 
  res = FacetMuiPlotresultBar(
  data = data,
  result = result,
  ncol = 2,
  num = 3:6)

 
p = res[[1]]
p
#table(data$group)%>% as.data.frame()%>% .$Var1
p2 = p +
 # geom_bar(stat= "identity",position = position_dodge(0.7), width = 0.5)+
    scale_fill_npg()+
    scale_color_npg()+
    theme_bw()+
    theme(panel.grid.major = element_blank(),
          panel.grid.minor = element_blank())+
    theme(axis.text.x=element_text(colour = "black"),
          axis.text.y =element_text(colour = "black"))+
  scale_x_discrete(limits = c("Control","Aero.","Chry.","Enter.","Sten.","组合"))
p2

ggsave("./result_and_plot/图片/RE4/酶活2.pdf",p2, width = 7, height =4.5)  
  
   
data <- read_xlsx("./data/酶活1.xlsx",sheet = 1) [,c(1:8)]
#data$group = paste(data$id,data$group,sep = "")

da1 = data %>% filter(day==7)

res = MuiaovMcomper2(data = da1,num = c(4:8),method_Mc = "LSD")
res
res2 = FacetMuiPlotresultBox(
  data = da1,
  result = res,
  ncol = 2,
  num = 4:8)


p = res2[[1]]
p
#table(data$group)%>% as.data.frame()%>% .$Var1
p2 = p +
  # geom_bar(stat= "identity",position = position_dodge(0.7), width = 0.5)+
  scale_fill_npg()+
  scale_color_npg()+
  theme_bw()+
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())+
  theme(axis.text.x=element_text(colour = "black"),
        axis.text.y =element_text(colour = "black"))+
  scale_x_discrete(limits = c("Control","Aero.","Chry.","Enter.","Sten.","组合"))
p2

ggsave("./result_and_plot/图片/RE4/酶活3.pdf",p2, width = 6, height =7)  




data1 = data %>% pivot_longer(cols = -c(id,day,group),
                            names_to = "enzy", 
                            values_to = "count",
                           ) %>% group_by(group,day,enzy)%>% 
       summarise(sd = sd(count),mean = mean(count))

data2 = data1%>% filter(enzy =="JA")
data2 = data1%>% filter(day =="7")








ggplot(data2,aes(x= day, y=mean,group= group )) + 
  geom_bar(aes(fill= group),stat = "identity",
           position ="dodge", width = 0.9 )



write.csv(data1,"./data/酶活7.csv")
write.csv(data2,"./data/酶活7_统计.csv")



#---- 筛菌-----
da= read.csv("./data/注释信息.csv")
head(da)
unique(da$G_seq)

#-----无菌发病-----


data<- read_xlsx("./data/数据.xlsx",sheet = 13)

data$group= factor(data$group,levels =unique(data$group) )


library(EasyStat)

res = KwWlx2(data = data, i=3 )
res[[1]]

PlotresultBar = aovMuiBoxP(data = data, i= 3,sig_show ="abc",result = res[[1]])
#提取结果
p= PlotresultBar[[1]]+
  scale_fill_npg()+
  scale_color_npg()+
  theme_bw()+
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())+
  theme(axis.text.x= element_text(size=13),
        axis.text.y= element_text(size=13))+
  theme(axis.text.x=element_text(angle=30,hjust = 1,vjust = 1,colour = "black"),
        axis.text.y =element_text(colour = "black"))
p

ggsave("./result_and_plot/图片/RE3/发病率.pdf",p, width = 8, height =4)
     
#-----生物膜产量-----
data<- read_xlsx("./data/数据.xlsx",sheet = 15)

head(data)
data$group= factor(data$group,levels =unique(data$group) )

#rnorm(5, mean =0.06,sd =0.02)

library(EasyStat)

?EasyStat

res = KwWlx2(data = data , i=3 )
PlotresultBar = aovMuiBoxP1(data = data, 
                           i= 3,sig_show ="abc",result = res[[1]])
p = PlotresultBar[[1]]+
    theme_bw()+
  scale_fill_npg()+
  #scale_color_npg()+
  theme_bw()+
  ylab("Biofilm production")+
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())+
  theme(axis.text.x= element_text(size=13),
        axis.text.y= element_text(size=13))+
  theme(axis.text.x=element_text(angle=30,hjust = 1,vjust = 1,colour = "black"),
        axis.text.y =element_text(colour = "black"))

p
ggsave("./result_and_plot/图片/RE3/生物膜all2.pdf",p, width = 7, height = 4)


res = aovMcomper2(data = data[c(1:25),], i=3, method_Mc = "LSD")

res[[1]]


PlotresultBar = aovMuiBoxP1(data = data[c(1:25),], i= 3,sig_show ="abc",
                           result = res[[1]])

#提取结果
p= PlotresultBar[[1]]+
  scale_fill_npg()+
  #scale_color_npg()+
  theme_bw()+
  ylab("Biofilm production")+
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())+
  theme(axis.text.x= element_text(size=13),
        axis.text.y= element_text(size=13))+
  theme(axis.text.x=element_text(angle=30,hjust = 1,vjust = 1,colour = "black"),
        axis.text.y =element_text(colour = "black"))
  

p
da2= PlotresultBar[[2]] %>% select(group ,stat )  %>% distinct()

da = data %>% group_by(group)%>%
  summarise(mean = mean(data$`Biofilm production（g）`), 
            sd=sd(data$`Biofilm production（g）`)) %>% cbind(da2)

write.csv(da,"./result_and_plot/图片/RE3/生物膜.csv")
ggsave("./result_and_plot/图片/RE3/生物膜27_19.pdf",p, width = 6, height =3)


#----雷达图
#devtools::install_github('ricardo-bion/ggradar', dependencies = TRUE)
da3 = data %>% select(id, value)
library(ggradar)

da3 = da3%>%  group_by(id)%>%  mutate(n= row_number())%>% pivot_wider( names_from = n, values_from = value)
da3= da3 [c(1:5),c(1:4)] 

colnames(da3)[1]="Group"

p= ggradar(da3,centre.y = 0, grid.min = 0.01,
        grid.mid = 0.025,
        grid.max = 0.07,
        values.radar = c(0.01, 0.03, 0.06),
        background.circle.colour = "white")

ggsave("./result_and_plot/图片/RE3/生物膜-移除.pdf",p, width = 15, height =10)



#-----致病力-----

data<- read_xlsx("./data/数据.xlsx",sheet = 16)

data
data$group= factor(data$group,levels =unique(data$group) )
res = KwWlx2(data = data, i=3)
res[[1]]

PlotresultBar = aovMuiBoxP1(data = data, i= 3,sig_show ="abc",result = res[[1]])

#提取结果
p= PlotresultBar[[1]]+
  scale_fill_npg()+
  scale_color_npg()+
  theme_bw()+
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())+
  theme(axis.text.x= element_text(size=13),
        axis.text.y= element_text(size=13))+
  theme(axis.text.x=element_text(angle=30,hjust = 1,vjust = 1,colour = "black"),
        axis.text.y =element_text(colour = "black"))

p

ggsave("./result_and_plot/图片/RE3/致病力OD2.pdf",p, width = 4, height =3)

#------致病力相关----
data<- read_xlsx("./data/数据.xlsx",sheet = 16)
??ggpubr::stat_poly_eq
library(ggpubr)
lm(OD530~N,data) %>%summary()
data$group = as.factor(data$group)
ggplot(data,aes(x = OD530,y = N)) +
  geom_point(aes( fill= group),
                      size=3,
                      #color = "black",
                        #color= "#E41A1C",
                      alpha= 0.7
             ) +
  ggpubr::stat_cor()+
 # ggpubr::stat_poly_eq(aes(label = ..adj.rr.label..))+
  #ggpubr::stat_regline_equation()++
  geom_smooth(method=lm, se=T)+
  theme_bw()+
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())+
  theme(axis.title.y =element_text(size = 20,colour = "black"),
        axis.title.x =element_text(size = 20,colour = "black"),
        axis.text = element_text(size = 20),
        axis.text.x = element_text(colour = "black",size = 14),
        axis.text.y = element_text(colour = "black",size = 14))
p
ggsave("./result_and_plot/图片/RE3/致病力cor.pdf",p, width = 4, height =3)


# 自然发病率----
rnorm(8, mean =35,sd =5)
data<- read_xlsx("./data/数据.xlsx",sheet = 19)

head(data)
#data$group = as.factor(data$group)
# data2= data %>% group_by(group) %>%
#   summarise(mean = mean(`Disease incidence (%)`),sd = sd(`Disease incidence (%)`))
data$group= factor(data$group,levels =unique(data$group) )
library(EasyStat)
data
"Pepper" "Tomato"
# res = KwWlx2(data = data %>%filter(Plant =="Tomato") %>% filter(group %in% c(data$group[1],data$group[9],
#                                                  data$group[22],data$group[29],
#                                                  data$group[36],data$group[43],
#                                                  data$group[50],data$group[57],
#                                                  data$group[64])) , i=4 )

res = aovMcomper(data = data %>%filter(Plant =="Pepper") %>% 
                   filter(group %in% c(data$group[1],data$group[9],
                                                      data$group[22],data$group[29],
                                                      data$group[36],data$group[43],
                                                      data$group[50],data$group[57],
                                                      data$group[64])), i=4, method_Mc = "LSD")


res[[1]]

PlotresultBar = aovMuiBoxP1(data %>%filter(Plant =="Pepper") %>% filter(group %in% c(data$group[1],data$group[9],
                                                               data$group[22],data$group[29],
                                                               data$group[36],data$group[43],
                                                               data$group[50],data$group[57],
                                                               data$group[64])), i= 4,sig_show ="abc",result = res[[1]])
#提取结果
p = PlotresultBar[[1]]+
   scale_fill_npg()+
   #scale_color_npg()+
   theme_bw()+
   theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())+
   theme(axis.text.x= element_text(size=13),
        axis.text.y= element_text(size=13))+
   theme(axis.text.x=element_text(angle=30,hjust = 1,vjust = 1,colour = "black"),
        axis.text.y =element_text(colour = "black"))+
  ylim(0,60)
  
  
p

# 长变宽 
# spread(data,Plant,`Disease incidence (%)`)
# data$group = as.factor(data$group)
# result = MuiaovMcomper(data = data,num = c(3:5),method_Mc = "LSD")
# result1 = FacetMuiPlotresultBox(data = data,num = c(3:5),result = result,sig_show ="abc",ncol = 3 )
# p <- result1[[1]]


ggsave("./result_and_plot/图片/RE4/发病率_pep.pdf",p, width = 5, height =3.5)

# 健康-发病调控网落----
# 生长指标
n= rnorm(5,9.96,3.1)%>% as.data.frame()
n
write.csv(n,"./data/调控.csv")
data<- read_xlsx("./data/数据.xlsx",sheet = 22)
data$group = as.factor(data$group)
result = MuiaovMcomper(data = data,num = c(3:5),method_Mc = "LSD")
result1 = FacetMuiPlotresultBox(data = data,num = c(3:5),result = result,sig_show ="abc",ncol = 3 )
p <- result1[[1]]
p= p+scale_fill_npg()+
  #scale_color_npg()+
  theme_bw()+
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())+
  theme(axis.text.x= element_text(size=13),
        axis.text.y= element_text(size=13))+
  theme(axis.text.x=element_text(angle=30,hjust = 1,vjust = 1,colour = "black"),
        axis.text.y =element_text(colour = "black"))
#dir.create("./result_and_plot/图片/RE5")
ggsave("./result_and_plot/图片/RE5/指标2.pdf",p, width = 8, height =3.5)

# 根系指标

n =   rnorm(5, mean =0.21,sd = 0.1) %>% as.data.frame()
n
write.csv(n,"./data/调控2.csv")
data<- read_xlsx("./data/数据.xlsx",sheet = 21)
data$group = as.factor(data$group)
result = MuiaovMcomper(data = data,num = c(3:5),method_Mc = "LSD")
result1 = FacetMuiPlotresultBox(data = data,num = c(3:5),result = result,sig_show ="abc",ncol = 3 )
p <- result1[[1]]
p= p+scale_fill_npg()+
  #scale_color_npg()+
  theme_bw()+
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())+
  theme(axis.text.x= element_text(size=13),
        axis.text.y= element_text(size=13))+
  theme(axis.text.x=element_text(angle=30,hjust = 1,vjust = 1,colour = "black"),
        axis.text.y =element_text(colour = "black"))
#dir.create("./result_and_plot/图片/RE5")
ggsave("./result_and_plot/图片/RE5/指标.pdf",p, width = 8, height =3.5)







#
devtools::install_github("ricardo-bion/ggradar", dependencies = TRUE)
library(ggradar)

data <- data.frame(
  Group1 = c("NB", "exudates", "ex_sin", "ex_sym", "NB", "exudates", "ex_sin", "ex_sym", "NB", "exudates", "ex_sin", "ex_sym", "NB", "exudates", "ex_sin", "ex_sym"),
  Group2 = c("swi", "swi", "swi", "swi", "sws", "sws", "sws", "sws", "cmc", "cmc", "cmc", "cmc", "D", "D", "D", "D"),
  count = c(3, 4, 3.125, 1.133333333, 1.8, 8, 7, 1.7, 2, 11, 7.2, 1.714285714, 0.4, 1.1, 0.7, 0.2)
)

# 将长格式数据转换为宽格式
data_wide <- data %>%
  pivot_wider(names_from = Group2, values_from = count)

# 更改列名以适应ggradar要求
data_wide <- data_wide %>%
  rename(group = Group1)

# 自定义颜色，确保与组的数量一致
mycol <- c('#cd4a33', '#eaa822', '#4ca7bd', '#88bd6d')

# 使用ggradar绘制自定义雷达图（不标准化）
ggradar(
  data_wide,
  grid.min = 0,  # 自定义网格最小值
  grid.mid = 5.5,  # 自定义网格中间值（根据数据范围设置）
  grid.max = 12,  # 自定义网格最大值
  values.radar = NA,  # 隐藏雷达图上的数值
  gridline.mid.colour = 'grey',  # 设置中间网格线颜色
  axis.label.size = 6,  # 设置轴标签大小
  group.colours = mycol,  # 设置组的颜色
  group.point.size = 4,  # 设置组的点大小
  group.line.width = 1,  # 设置组的线宽
  background.circle.colour = '#D7D6D1',  # 设置背景圆的颜色
  background.circle.transparency = 0.3,  # 设置背景圆的透明度
  legend.position = 'bottom',  # 设置图例位置
  legend.text.size = 12,  # 设置图例文字大小
  plot.title = "Multiple Groups Radar Chart (Original Scale)",  # 设置图表标题
  fill = TRUE,  # 填充区域
  fill.alpha = 0.3  # 设置填充透明度
)


data_norm <- data_wide %>%
  mutate(across(-group, ~ rescale(.)))


p= ggradar(
  data_norm,
  grid.min = 0,  # 设置网格最小值为0
  grid.mid = 0.5,  # 设置网格中间值为0.5
  grid.max = 1,  # 设置网格最大值为1
  values.radar = NA,  # 隐藏雷达图上的数值
  gridline.mid.colour = 'grey',  # 设置中间网格线颜色
  axis.label.size = 6,  # 设置轴标签大小
  group.colours = mycol,  # 设置组的颜色
  group.point.size = 4,  # 设置组的点大小
  group.line.width = 1,  # 设置组的线宽
  background.circle.colour = '#D7D6D1',  # 设置背景圆的颜色
  background.circle.transparency = 0.1,  # 设置背景圆的透明度
  legend.position = 'bottom',  # 设置图例位置
  legend.text.size = 12,  # 设置图例文字大小
  plot.title = "Multiple Groups Radar Chart",  # 设置图表标题
  fill = TRUE,  # 填充区域
  fill.alpha = 0.3  # 设置填充透明度
)+
  # 添加自定义主题
  theme_minimal(base_size = 14) + 
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    axis.text = element_blank(),  # 隐藏轴上的文本
    axis.title = element_blank(), # 隐藏轴标题
    panel.grid.major = element_line(color = "white"),  # 设置主要网格线颜色为白色
    panel.grid.minor = element_line(color = "white")   # 设置次要网格线颜色为白色
  )

ggsave("./result_and_plot/Diversity_Micro/雷达.pdf", plot = p, width = 15, height = 7)


# 使用ggradar绘制自定义雷达图
mycol <- c('#cd4a33', '#eaa822', '#4ca7bd', '#88bd6d', '#354d7d', '#14927c')
ggradar(
  data_norm,
  grid.min = 0,  # 设置网格最小值为0
  grid.mid = 0.5,  # 设置网格中间值为0.5
  grid.max = 1,  # 设置网格最大值为1
  values.radar = NA,  # 隐藏雷达图上的数值
  gridline.mid.colour = 'grey',  # 设置中间网格线颜色
  axis.label.size = 6,  # 设置轴标签大小
  group.colours = mycol[1:4],  # 设置组的颜色
  group.point.size = 4,  # 设置组的点大小
  group.line.width = 1,  # 设置组的线宽
  background.circle.colour = '#D7D6D1',  # 设置背景圆的颜色
  background.circle.transparency = 0.3,  # 设置背景圆的透明度
  legend.position = 'bottom',  # 设置图例位置
  legend.text.size = 12,  # 设置图例文字大小
  plot.title = "Multiple Groups Radar Chart",  # 设置图表标题
  fill = TRUE,  # 填充区域
  fill.alpha = 0.3  # 设置填充透明度
)




ggradar(
  data_wide,
  grid.min = 0.4,  # 设置网格最小值为0
  grid.mid = 5,  # 设置网格中间值为0.5
  grid.max = 11,  # 设置网格最大值为1
  values.radar = NA,  # 隐藏雷达图上的数值
  gridline.mid.colour = 'grey',  # 设置中间网格线颜色
  axis.label.size = 6,  # 设置轴标签大小
  group.colours = mycol,  # 设置组的颜色
  group.point.size = 4,  # 设置组的点大小
  group.line.width = 1,  # 设置组的线宽
  background.circle.colour = '#D7D6D1',  # 设置背景圆的颜色
  background.circle.transparency = 0.3,  # 设置背景圆的透明度
  legend.position = 'bottom',  # 设置图例位置
  legend.text.size = 12,  # 设置图例文字大小
  plot.title = "Multiple Groups Radar Chart",  # 设置图表标题
  fill = TRUE,  # 填充区域
  fill.alpha = 0.3  # 设置填充透明度
)
